
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Text.Json;
using GameFrameX.Core.Config;
using GameFrameX.Config;

namespace GameFrameX.Config
{
    public partial class TablesComponent
    {
        internal Local.TbLocalization TbLocalization { private set; get; }
        internal Tables.TbAchievementConfig TbAchievementConfig { private set; get; }
        internal Tables.TbItemConfig TbItemConfig { private set; get; }
        internal Tables.TbSoundsConfig TbSoundsConfig { private set; get; }
    
        private ConfigComponent m_ConfigComponent;

        public void Init(ConfigComponent configComponent)
        {
            m_ConfigComponent = configComponent;
            configComponent.RemoveAllConfigs();
        }

        public async System.Threading.Tasks.Task LoadAsync(System.Func<string, System.Threading.Tasks.Task<JsonElement>> loader)
        {
            //m_ConfigComponent.RemoveAllConfigs();
            var loadTasks = new System.Collections.Generic.List<System.Threading.Tasks.Task>();
    
            TbLocalization = new Local.TbLocalization(() => loader("local_tblocalization"));
            loadTasks.Add(TbLocalization.LoadAsync());
            m_ConfigComponent.Add(nameof(Local.TbLocalization), TbLocalization);

            TbAchievementConfig = new Tables.TbAchievementConfig(() => loader("tables_tbachievementconfig"));
            loadTasks.Add(TbAchievementConfig.LoadAsync());
            m_ConfigComponent.Add(nameof(Tables.TbAchievementConfig), TbAchievementConfig);

            TbItemConfig = new Tables.TbItemConfig(() => loader("tables_tbitemconfig"));
            loadTasks.Add(TbItemConfig.LoadAsync());
            m_ConfigComponent.Add(nameof(Tables.TbItemConfig), TbItemConfig);

            TbSoundsConfig = new Tables.TbSoundsConfig(() => loader("tables_tbsoundsconfig"));
            loadTasks.Add(TbSoundsConfig.LoadAsync());
            m_ConfigComponent.Add(nameof(Tables.TbSoundsConfig), TbSoundsConfig);

    
            await System.Threading.Tasks.Task.WhenAll(loadTasks);
    
            Refresh();
        }

        public TablesComponent()
        {
            //TablesMemory.BeginRecord();
    
            // TbLocalization = new Local.TbLocalization();
            // TbAchievementConfig = new Tables.TbAchievementConfig();
            // TbItemConfig = new Tables.TbItemConfig();
            // TbSoundsConfig = new Tables.TbSoundsConfig();
            //TablesMemory.EndRecord();
        }

        public void Refresh()
        {
            PostInit();
            ResolveRef();
        }

        private void ResolveRef()
        {
            TbLocalization.ResolveRef(this);
            TbAchievementConfig.ResolveRef(this);
            TbItemConfig.ResolveRef(this);
            TbSoundsConfig.ResolveRef(this);
        }
    
        partial void PostInit();
    }
}
